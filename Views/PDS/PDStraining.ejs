
<script>
    const trainings = [];
</script>
<div class="row align-items-center">
    <form class="mt-1 pds-form" >
        <label class=" formHeader" for="PD-EASE">Trainings</label>
        <div class="row justify-content-center">
            <div class="col-lg-10 custom-padding-left">
                <button class="btn btn-primary form-btn" type="submit">Save</button>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-lg-5 col-sm-10 custom-padding-left">

                <a class="btn btn-light bg-flagged  my-3"  id="AddChild" onclick="addtraining()">+ add</a>
                <label class="" for="lditPrograms">Title of Learning and Development Interventions/Training Programs: </label>
                <input class="" id="lditPrograms" name="lditPrograms" placeholder="Write in full do not Abbreviate" value="" >
                
                <label class=" formsubHeader" for="spouse">Inclusive Dates of Attendance: </label>
                <label class="" for="trainedFrom">From: </label>
                <input class="" type="date" id="trainedFrom" name="trainedFrom" placeholder="Starting Date" value="" >
                <label class="" for="trainedTo">To: </label>
                <input class="" type="date" id="trainedTo" name="trainedTo" placeholder="Ending Date" value="" >

                <label class="" for="trainingnumberOfHours">Number of Hours: </label>
                <input type="number" class="" id="trainingnumberOfHours" name="trainingnumberOfHours" placeholder="in Hours" value="" >

                <label class="" for="typeOfLD">Type of Learning Development: </label>
                <select class="" id="typeOfLD" name="typeOfLD" value="" required>
                    <option value="Managerial">Managerial</option>
                    <option value="Supervisory">Supervisory</option>
                    <option value="Technical">Technical</option>
                </select>

                <label class="" for="conductedSponsoredBy">Conducted and Sponsored By: </label>
                <input class="" id="conductedSponsoredBy" name="conductedSponsoredBy" placeholder="Write Full Name " value="" >
            </div>
            <div class="col-lg-5 col-sm-10 custom-padding-left">
                <% if(tr) {if (tr.ldit === null) {} else {%><% for( var training of tr.ldit ) { %>
                    <!-- add all the current childrens to the array -->

                    <script data-trainedfrom="<%- training.trainedFrom.toDateString() %>" data-trainedto="<%- training.trainedTo.toDateString() %>" 
                        data-lditprograms="<%- training.lditPrograms %>" data-trainingnumberofhours="<%- training.trainingnumberOfHours%>"
                        data-typeofld="<%- training.typeOfLD%>" data-conductedsponsoredby="<%- training.conductedSponsoredBy%>">
                        
                        trainedFrom = document.currentScript.dataset.trainedfrom;
                        trainedTo = document.currentScript.dataset.trainedto;
                        trainingnumberOfHours = document.currentScript.dataset.trainingnumberofhours;
                        typeOfLD = document.currentScript.dataset.typeofld;
                        conductedSponsoredBy = document.currentScript.dataset.conductedsponsoredby;
                        lditPrograms = document.currentScript.dataset.lditprograms;

                        console.log({trainedFrom, trainedTo, trainingnumberOfHours, typeOfLD, conductedSponsoredBy, lditPrograms})
                        trainings.push({trainedFrom, trainedTo, trainingnumberOfHours, typeOfLD, conductedSponsoredBy, lditPrograms});
                    </script>

                <% } %><%}}%>
                <label class=" formsubHeader" for="trainings">Learning and Development Interventions/Training Programs</label>
                <label class="" for="schooLevel">Click Add after filling up to save entry </label>
                <label class="" for="schooLevel">Entries Will Show Here</label>
                <label class="" for="schooLevel">Only Those below Here will be saved after Clicking Save</label>
                <hr>
                <div id="referenceblock1" class="referenceblock"></div>
                <input type="hidden" name="userId" id="userId" value="<%= user._id %>">
            </div>
        </div>
    </form>
    
    
</div>
<script >
    const referenceblock = document.getElementById('referenceblock1');
   function printtrainings() {
    trainings.forEach((training, index) => {
        var cardblock = document.createElement("div");
        cardblock.className = "card";
        var cardbody = document.createElement("div");
        cardbody.className = "card-body";

        // Create h1 element
        var lditProgramsblock = document.createElement("h1");
        lditProgramsblock.textContent = training.lditPrograms;
    
        // Create p element for trained from
        var trainedFromblock = document.createElement("p");
        trainedFromblock.textContent = 'Trained From: ' + training.trainedFrom;

        // Create p element for trained to
        var trainedToblock = document.createElement("p");
        trainedToblock.textContent = 'Trained To: ' + training.trainedTo;

        // Create p element for number of training hours
        var trainingnumberOfHoursblock = document.createElement("p");
        trainingnumberOfHoursblock.textContent = 'Number of Training Hours: ' + training.trainingnumberOfHours;

        // Create p element for type of learning and development
        var typeOfLDblock = document.createElement("p");
        typeOfLDblock.textContent = 'Type of Learning and Development: ' + training.typeOfLD;

        // Create p element for conducted or sponsored by
        var conductedSponsoredByblock = document.createElement("p");
        conductedSponsoredByblock.textContent = 'Conducted/Sponsored By: ' + training.conductedSponsoredBy; 

        // Create delete button for deleting this child's information
        var deleteButton = document.createElement("a");
        deleteButton.className = 'btn deleteButton'; // Use className to assign a class
        
        var deleticon = document.createElement("i");
        deleticon.className = 'lni lni-eraser';
        deleteButton.appendChild(deleticon)
        
        // Add event listener to delete button
        deleteButton.addEventListener("click", function() {
            // Remove child's information and the delete button from the DOM
            referenceblock.removeChild(cardblock);
            
            // Remove child's data from the 'children' array
            trainings.splice(index);
        });
        referenceblock.appendChild(cardblock);
        cardblock.appendChild(cardbody);
    
        // Append child's name, birthday, and delete button to reference block
        cardbody.appendChild(lditProgramsblock);
        cardbody.appendChild(trainedFromblock);
        cardbody.appendChild(trainedToblock);
        cardbody.appendChild(trainingnumberOfHoursblock);
        cardbody.appendChild(typeOfLDblock);
        cardbody.appendChild(conductedSponsoredByblock);
        cardbody.appendChild(deleteButton);

    
    });
    
   }
   printtrainings()
   function addtraining() {
    const lditPrograms = document.getElementById('lditPrograms');
    const trainedFrom = document.getElementById('trainedFrom');
    const trainedTo = document.getElementById('trainedTo');
    const trainingnumberOfHours = document.getElementById('trainingnumberOfHours');
    const typeOfLD = document.getElementById('typeOfLD');
    const conductedSponsoredBy= document.getElementById('conductedSponsoredBy');
    const referenceblock = document.getElementById('referenceblock1');

    // Check if all fields are not empty
    if (lditPrograms.value.trim() === '' || trainedFrom.value.trim() === ''
        || trainedTo.value.trim() === '' || trainingnumberOfHours.value.trim() === ''
        || typeOfLD.value.trim() === '' || conductedSponsoredBy.value.trim() === '') {
        // If any field is empty, display an alert or handle the error accordingly
        alert('Please fill in all fields');
        return; // Exit the function early
    }

    // If all fields are filled, proceed with other actions
    trainings.push({
        lditPrograms: lditPrograms.value,
        trainedFrom: trainedFrom.value,
        trainedTo: trainedTo.value,
        trainingnumberOfHours: trainingnumberOfHours.value,
        typeOfLD: typeOfLD.value,
        conductedSponsoredBy: conductedSponsoredBy.value
    });
    console.log(trainings, 'hello');

    // Clear the referenceblock
    while (referenceblock.firstChild) {
        referenceblock.removeChild(referenceblock.firstChild);
    }

    // Print trainings (assuming printtrainings() is defined elsewhere)
    printtrainings();
    lditPrograms.value = '';
    trainedFrom.value = '';
    trainedTo.value = '';
    trainingnumberOfHours.value = '';
    typeOfLD.value = 'Managerial';
    conductedSponsoredBy.value = '';
    }

    const form = document.querySelector('form');
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const userId = form.userId.value;
         
    
        console.log({userId, trainings} );
        if(trainings.length > 0){
        try{
            const res = await fetch('/training', {
              method: 'POST',
              body: JSON.stringify({userId, ldit: trainings}),
              headers: { 'Content-Type': 'application/json' }
            });
            const data = await res.json();
                if(data.errors){
                    localStorage.setItem('notification', 'Saving Data Failed.');
                  location.assign('/training/<%=user._id%>');
                }
                if (data.status){
                    localStorage.setItem('notification', 'Data saved successfully.');
                  location.assign('/training/<%=user._id%>');
                }
          }
          catch (err){
          }
      }else {
            localStorage.setItem('notification', 'Please Input atleast 1 Data before saving');
            location.assign('/training/<%=user._id%>');
        }
      })
    
</script>
